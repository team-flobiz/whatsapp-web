{"ast":null,"code":"var _jsxFileName = \"/Users/vazidmansuri/whatsappweb/Frontend/whatsappwebjs-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport QRCode from \"react-qr-code\";\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = `io(\"http://localhost:3002\")`; // Change the server URL to match your server's URL\n\nfunction App() {\n  _s();\n  const [qrCode, setQRCode] = useState(\"\");\n  console.log(\"yo\" + qrCode);\n  useEffect(() => {\n    console.log(\"WebSocket connection status:\", socket.connected); // Add this line\n\n    socket.on(\"qr\", qrData => {\n      console.log(\"Received QR data:\", qrData);\n      setQRCode(qrData);\n    });\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WhatsApp Web Js Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Open WhatsApp and Scan QR mentioned Below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n      value: qrCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+3VDA7U7xA2tIeakXrsQoVkcOpQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","QRCode","io","jsxDEV","_jsxDEV","socket","App","_s","qrCode","setQRCode","console","log","connected","on","qrData","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["/Users/vazidmansuri/whatsappweb/Frontend/whatsappwebjs-client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport QRCode from \"react-qr-code\";\nimport io from \"socket.io-client\";\n\nconst socket = `io(\"http://localhost:3002\")`; // Change the server URL to match your server's URL\n\nfunction App() {\n  const [qrCode, setQRCode] = useState(\"\");\n  console.log(\"yo\" + qrCode);\n\n  useEffect(() => {\n    console.log(\"WebSocket connection status:\", socket.connected); // Add this line\n\n    socket.on(\"qr\", (qrData) => {\n      console.log(\"Received QR data:\", qrData);\n      setQRCode(qrData);\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>WhatsApp Web Js Client</h1>\n      <h2>Open WhatsApp and Scan QR mentioned Below</h2>\n      <QRCode value={qrCode} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,MAAM,GAAI,6BAA4B,CAAC,CAAC;;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxCU,OAAO,CAACC,GAAG,CAAC,IAAI,GAAGH,MAAM,CAAC;EAE1BT,SAAS,CAAC,MAAM;IACdW,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEN,MAAM,CAACO,SAAS,CAAC,CAAC,CAAC;;IAE/DP,MAAM,CAACQ,EAAE,CAAC,IAAI,EAAGC,MAAM,IAAK;MAC1BJ,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEG,MAAM,CAAC;MACxCL,SAAS,CAACK,MAAM,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,MAAM;MACXT,MAAM,CAACU,UAAU,CAAC,CAAC;IACrB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKY,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBb,OAAA;MAAAa,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BjB,OAAA;MAAAa,QAAA,EAAI;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDjB,OAAA,CAACH,MAAM;MAACqB,KAAK,EAAEd;IAAO;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEV;AAACd,EAAA,CAxBQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}