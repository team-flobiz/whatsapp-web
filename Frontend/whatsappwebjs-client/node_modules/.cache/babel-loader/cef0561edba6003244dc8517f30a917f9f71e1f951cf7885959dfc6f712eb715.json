{"ast":null,"code":"var _jsxFileName = \"/Users/vazidmansuri/whatsappweb/Frontend/whatsappwebjs-client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport QRCode from \"react-qr-code\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [qrCodeValue, setQRCodeValue] = useState(\"\");\n  useEffect(() => {\n    // Function to fetch the QR code value from the server\n    const fetchQRCodeValue = async () => {\n      try {\n        const response = await axios.get(\"/get-qr-code\");\n        setQRCodeValue(response.data.qrCodeValue);\n      } catch (error) {\n        console.error(\"Error fetching QR code:\", error);\n      }\n    };\n\n    // Fetch the QR code value immediately when the component mounts\n    fetchQRCodeValue();\n\n    // Fetch the QR code value periodically (e.g., every 10 seconds)\n    const qrCodeUpdateInterval = setInterval(fetchQRCodeValue, 10 * 1000); // 10 seconds\n\n    // Clear the interval when the component unmounts to avoid memory leaks\n    return () => clearInterval(qrCodeUpdateInterval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"WhatsApp Web Js Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Open WhatsApp and Scan QR mentioned Below\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QRCode, {\n      value: qrCodeValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"U/EO5XyoXYrvb44VlS+FxhsffbE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","QRCode","axios","jsxDEV","_jsxDEV","App","_s","qrCodeValue","setQRCodeValue","fetchQRCodeValue","response","get","data","error","console","qrCodeUpdateInterval","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","_c","$RefreshReg$"],"sources":["/Users/vazidmansuri/whatsappweb/Frontend/whatsappwebjs-client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport QRCode from \"react-qr-code\";\nimport axios from \"axios\";\n\nfunction App() {\n  const [qrCodeValue, setQRCodeValue] = useState(\"\");\n\n  useEffect(() => {\n    // Function to fetch the QR code value from the server\n    const fetchQRCodeValue = async () => {\n      try {\n        const response = await axios.get(\"/get-qr-code\");\n        setQRCodeValue(response.data.qrCodeValue);\n      } catch (error) {\n        console.error(\"Error fetching QR code:\", error);\n      }\n    };\n\n    // Fetch the QR code value immediately when the component mounts\n    fetchQRCodeValue();\n\n    // Fetch the QR code value periodically (e.g., every 10 seconds)\n    const qrCodeUpdateInterval = setInterval(fetchQRCodeValue, 10 * 1000); // 10 seconds\n\n    // Clear the interval when the component unmounts to avoid memory leaks\n    return () => clearInterval(qrCodeUpdateInterval);\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>WhatsApp Web Js Client</h1>\n      <h2>Open WhatsApp and Scan QR mentioned Below</h2>\n      <QRCode value={qrCodeValue} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,eAAe;AAClC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACd;IACA,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,cAAc,CAAC;QAChDH,cAAc,CAACE,QAAQ,CAACE,IAAI,CAACL,WAAW,CAAC;MAC3C,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;IACF,CAAC;;IAED;IACAJ,gBAAgB,CAAC,CAAC;;IAElB;IACA,MAAMM,oBAAoB,GAAGC,WAAW,CAACP,gBAAgB,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC,CAAC;;IAEvE;IACA,OAAO,MAAMQ,aAAa,CAACF,oBAAoB,CAAC;EAClD,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBf,OAAA;MAAAe,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BnB,OAAA;MAAAe,QAAA,EAAI;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClDnB,OAAA,CAACH,MAAM;MAACuB,KAAK,EAAEjB;IAAY;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3B,CAAC;AAEV;AAACjB,EAAA,CA/BQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAiCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}